name: CI/CD Pipeline

on:
  push:
    branches: 
    - 'main'
  pull_request: 
    branches: 
    - 'main'
  workflow_dispatch:

jobs:
  Docker:
    if: github.ref == 'refs/heads/main'
    name: Docker Build and Push
    runs-on: Ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build and push image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{vars.Docker_Repo}}:latest
  Deploy: 
    if: github.ref == 'refs/heads/main'
    name: Deploy To Docker Instance 
    needs: Docker
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Create Private Key
      run: |
        echo "${{secrets.key}}" > id_rsa
        chmod 600 id_rsa
    - name: Check if image and container exist
      run: |
        ssh -o StrictHostKeyChecking=no -t -i id_rsa opc@129.213.60.252 << EOF
        sudo docker kill RPSPorto; sudo docker rm RPSPorto; sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{vars.Docker_Repo}}:latest
        exit
        EOF
      continue-on-error: true
    - name: Deploy with Docker
      run: |
        ssh -o StrictHostKeyChecking=no -t -i id_rsa opc@129.213.60.252 << EOF
        sudo docker run --name RPSPorto -p 1000:1000 -d -v /etc/letsencrypt:/etc/letsencrypt ${{ secrets.DOCKERHUB_USERNAME }}/${{vars.Docker_Repo}}:latest
        sudo firewall-cmd --add-port=1000/tcp
        sudo firewall-cmd --reload
        exit
        EOF
      